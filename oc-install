#!/bin/sh

# exit if a command fails
set -e 
set -o pipefail

##function definitions
start_psql() {
    echo '### starting database server ###'
    su - postgres -c "pg_ctl start -D /var/lib/postgresql/data -l /var/log/postgresql/log"
}


if [ "$DB_EXTERNAL" = false ]; then

    if [ ! -d /var/lib/postgresql/data/base ]; then

        chown postgres:postgres /var/lib/postgresql/data
        chmod u=rwx,g-rwx,o-rwx /var/lib/postgresql/data

        echo '### no local postgres database found ###'
        echo '### installing database ###'

        su - postgres -c "initdb --locale en_US.UTF-8 -E UTF8 -D '/var/lib/postgresql/data'"
        start_psql
        sleep 2 #wait for postgres till started
        echo '### create Owncloud Database and -user ###'
        su - postgres -c "psql -c \"CREATE USER $DB_USER WITH PASSWORD '$DB_PASS';\""  
        su - postgres -c "psql -c \"CREATE DATABASE $DB_NAME OWNER $DB_USER;;\""
    else
        echo '### existing postgres database found ###'
        start_psql
    fi 

fi


   
if [ ! -e "$OC_WWW/index.php" ]; then
    
    echo '### no owncloud webfiles found ###'
    mkdir -p "$OC_WWW/data" "$OC_WWW/apps2" 
    echo '### downloading owncloud webinstaller ###'
    wget https://download.owncloud.com/download/community/setup-owncloud.php -O "$OC_WWW/setup-owncloud.php"
   
    echo '### running owncloud webinstaller ###'
    echo '...this may take a while...'
    echo ""| php -R 'include("'$OC_WWW'/setup-owncloud.php");' -B 'parse_str($argv[1], $_GET);' 'step=2&directory=.'
    rm -f "$OC_WWW"/setup-owncloud.php
fi


echo '### copying templates from /tpl ###'

# usethis variable to write he dollar e.g.: 
#    $config = $bash_var; 
# goes to  
#    ${D}config = $bash_var;
# where config is a php variable set to the content of the bash variable "$bash_var"
export D='$'

for tpl in $(find /tpl -type f); do 
    destination=${tpl#/tpl}
    echo "$tpl >> $destination"
    mkdir -p "${destination%/*}"
    echo "$(envsubst < $tpl)" > "$destination"
done



if [ ! -e /srv/installed ]; then
    echo "### set timezone to $OC_TIME ###"
    ln -sf /usr/share/zoneinfo/$OC_TIME /etc/localtime
   
    # not supported in alpine 
    #echo "### set locale to $LC_OC"
    #echo -e "LANG=$OC_LC\nLC_MESSAGES=$OC_LC\nLC_MONETARY=$OC_LC\nLC_NUMERIC=$OC_LC\nLC_TIME=$OC_LC" > /etc/locale.conf
    #locale-gen

    echo '### fixing directory premissions ###'    
    #from https://wiki.archlinux.org/index.php/OwnCloud
    /usr/local/bin/oc-perms

    echo '### configuring apache ###'
    sed -i 's/ServerAdmin.*$/ServerAdmin '"$OC_EMAIL"'/g' /etc/apache2/httpd.conf 
    sed -i 's/^#ServerName.*$/ServerName '"$OC_DOMAIN"'/g' /etc/apache2/httpd.conf

    if [ "$OC_BACKUP_CRON" != "no" ]; then
       echo "### set up backup cron ###"
       echo "OC_BACKUP_FILES=$OC_BACKUP_FILES
       $OC_BACKUP_CRON /usr/local/bin/backup -b 2>&1 | tee /var/log/backup.log" > /var/spool/cron/crontabs/root
       crond -b -L /var/log/cron.log
    fi
 

    echo '### Gratulations! Point your browser to your new owncloud instance. ###'
    touch /srv/installed
fi

exec $@
